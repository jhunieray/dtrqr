<?php
/* 
 * Generated by CRUDigniter v3.4 
 * www.crudigniter.com
 */
 
class Employee_time extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Employee_model');
        $this->load->model('Employee_time_model');
        $this->load->model('User_model');
    } 

    function index()
    {
        $this->form_validation->set_rules('id_number','ID Number','required');
        $employee_time = null;
        $employee = null;
        $msg = null;

        if($this->form_validation->run())     
        {   
            $id = (int) $this->input->post('id_number');
            $t = $this->input->post('optradio');
            $employee = $this->Employee_model->get_employee($id);

            if(null!==$employee) {
                $params = array(
                    'employee_id' => $employee->id,
                    'user_id' => $this->session->userdata('id'),
                    'date_added' => date('Y-m-d'),
                    'time_in' => $t == 'in' ? date('H:i:s') : null,
                    'time_out' => $t =='out' ? date('H:i:s') : null
                );

                $employee_time_id = $this->Employee_time_model->add_employee_time($params);
                $employee_time = $this->Employee_time_model->get_employee_time($employee_time_id);
                $msg = $t == 'in' ? 'Time in added!' : 'Time out added!';
            } else {
                $msg = 'Employee does not exist!';
            }
        }
        $data['employee_time'] = $employee_time;
        $data['employee'] = $employee;
        $data['msg'] = $msg;

        $data['_view'] = 'employee_time/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Listing of employee_time
     */
    function dtr()
    {
        
        $data['_view'] = 'employee_time/dtr';
        $this->load->view('layouts/main',$data);
    }

    function dtr_list()
    {
        $columns = array( 
                            0 =>'id', 
                            1 =>'employee',
                            2=> 'logged_by',
                            3=> 'date_added',
                            4=> 'time_in',
                            5=> 'time_out',
                        );

        $limit = $this->input->post('length');
        $start = $this->input->post('start');
  
        $totalData = $this->Employee_time_model->get_all_employee_time_count();
            
        $totalFiltered = $totalData; 
            
        if(empty($this->input->post('search')['value']))
        {            
            $employees_time = $this->Employee_time_model->get_all_employee_time(['limit'=>$limit,'offset'=>$start]);
        }
        else {
            $search = $this->input->post('search')['value']; 

            $employees_time =  $this->Employee_time_model->employee_time_search($limit,$start,$search);

            $totalFiltered = $this->Employee_time_model->employee_time_search_count($search);
        }

        $data = array();
        if(!empty($employees_time))
        {
            foreach ($employees_time as $employee_time)
            {
                $logged_by = $this->User_model->get_user($employee_time->user_id);
                $employee = $this->Employee_model->get_employee($employee_time->employee_id);
                $nestedData['id'] = $employee_time->id;
                $nestedData['employee'] = null!==$employee ? $employee->first_name.' '.$employee->last_name : 'Employee Deleted';
                $nestedData['logged_by'] = null!==$logged_by ? $logged_by->user_name : 'User Deleted';
                $nestedData['date_added'] = $employee_time->date_added;
                $nestedData['time_in'] = $employee_time->time_in;
                $nestedData['time_out'] = $employee_time->time_out;
                $data[] = $nestedData;
            }
        }
          
        $json_data = array(       
                    "draw"            => intval($this->input->post('draw')),  
                    "recordsTotal"    => intval($totalData),  
                    "recordsFiltered" => intval($totalFiltered), 
                    "data"            => $data   
                    );
            
        echo json_encode($json_data);
    }
}
